https://leetcode.com/problems/apply-operations-to-make-string-empty/description/
Accepted:
class Solution {
    public String lastNonEmptyString(String s) {
        int cnt[]=new int[26];
        for(int i=0;i<s.length();i++)
        {
            cnt[s.charAt(i)-'a']++;
        }
       int max=Integer.MIN_VALUE;
        for(int i=0;i<26;i++)
         {
            if(cnt[i]>max)
                max=cnt[i];
         }
         HashSet<Character> hs=new HashSet<>();
         String ans="";
        for(int i=s.length()-1;i>=0;i--)
        {
            if(!hs.contains(s.charAt(i)) && cnt[s.charAt(i)-'a']==max)
            {
                ans=s.charAt(i)+ans;
                hs.add(s.charAt(i));
            }
        }
        return ans; 
    }
}

TLE :
class Solution {
    public String lastNonEmptyString(String s) {
        StringBuilder sb=new StringBuilder(s);
        String tempAns="";
        String ans="";
        int k=0;
        String endGame="";
        for(int i=0;i<s.length();i++)
            endGame=endGame+'*'
;        while(true)
        {
           
            int i=0;
            HashSet<Character> hs=new HashSet<>();
              tempAns=sb.toString();
            while(i<sb.length())
            {
                if(sb.charAt(i)!='*' && !hs.contains(sb.charAt(i)))
                {
                    hs.add(sb.charAt(i));
                    sb.setCharAt(i,'*');
                }
                i++;
            }
           
             if(sb.toString().equals(endGame))
                {
            
                    for(int j=0;j<tempAns.length();j++)
                    {
                       if(tempAns.charAt(j)!='*')
                       ans=ans+tempAns.charAt(j);
                    }
                    return ans;
                }
          
      
            
        }
       
    }
}
